// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String

  refreshToken String?

  interviews Interview[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interview {
  id       String          @id @default(uuid())
  userId   String
  user     User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  topic    String
  difficulty Difficulty
  status   InterviewStatus @default(ACTIVE)

  questions  Json?
  transcript Json?
  analysis   Json?
  feedback   Json?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?

  progress InterviewProgress?
  questionList Question[]

  @@index([userId])
}

model InterviewProgress {
  id                String    @id @default(uuid())
  interviewId       String    @unique
  interview         Interview @relation(fields: [interviewId], references: [id], onDelete: Cascade)
  currentQuestion   Int
  completedQuestions Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id          String    @id @default(uuid())
  interviewId String
  interview   Interview @relation(fields: [interviewId], references: [id], onDelete: Cascade)
  text        String
  isFollowUp  Boolean   @default(false)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([interviewId])
}

enum InterviewStatus {
  ACTIVE
  COMPLETED
  TERMINATED
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
